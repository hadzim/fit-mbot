/**
 * THIS FILE IS GENERATED BY genTool, DO NOT CHANGE IT!!!!!
 */
#ifndef _HWIO_SERVICE_DBUS_H_
#define _HWIO_SERVICE_DBUS_H_

#include <Poco/SharedPtr.h>
#include <Poco/BasicEvent.h>
#include <string>
#include <vector>
#include <map>
#include <memory>
#include <TBS/Services/Services.h>
#include <TBS/Services/DBus/DBusServices.h>
///includes
#include "HWIO.h"

namespace TBS {
	namespace Services {
		class CommunicationChannelHolder;
	}
}

namespace TBS { 
	namespace TSeries { 
		namespace Services { 
			namespace HWIO { 
				namespace DBus { 
       class Client {
			public:
				typedef Poco::SharedPtr <Client> Ptr;
				
				//with given dbus dispatcher via DBusCommChannelProvider
				Client(TBS::Services::ICommChannelHolder::Ptr ch);
				//with default dbus dispatcher
				Client();
				
				TBS::TSeries::Services::HWIO::IServices & Services();
TBS::TSeries::Services::HWIO::ISmartController & SmartController();
TBS::TSeries::Services::HWIO::IInternalRelay & InternalRelay();

				
		private: 
				TBS::Services::ICommChannelHolder::Ptr ch;
				std::auto_ptr<TBS::Services::CommunicationChannelHolder> comChannelHolder;
				TBS::TSeries::Services::HWIO::IServices::Ptr services_;
TBS::TSeries::Services::HWIO::ISmartController::Ptr smartcontroller_;
TBS::TSeries::Services::HWIO::IInternalRelay::Ptr internalrelay_;

			};
			
			
		class Server {
			public:
				typedef Poco::SharedPtr<Server> Ptr;
				//with given dbus dispatcher via DBusCommChannelProvider
				Server(TBS::Services::ICommChannelHolder::Ptr ch);
				//uses default dbus dispatcher
				Server();
				
			public:
				TBS::Services::IServer::Ptr createServices(TBS::TSeries::Services::HWIO::IServices::Ptr impl);
TBS::Services::IServer::Ptr createSmartController(TBS::TSeries::Services::HWIO::ISmartController::Ptr impl);
TBS::Services::IServer::Ptr createInternalRelay(TBS::TSeries::Services::HWIO::IInternalRelay::Ptr impl);

				
			private:
				TBS::Services::ICommChannelHolder::Ptr ch;
		};
 } 
 } 
 } 
 } 
 } 

#endif //_HWIO_SERVICE_H_

