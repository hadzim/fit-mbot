/**
 * THIS FILE IS GENERATED BY genTool, DO NOT CHANGE IT!!!!!
 */
#ifndef _ULTRASOUND_JSONSERVER_H_
#define _ULTRASOUND_JSONSERVER_H_

#include <Poco/SharedPtr.h>
#include <Poco/BasicEvent.h>
#include <string>
#include <vector>
#include <map>
#include <memory>
#include <jsonrpc/rpc.h>
///includes
#include "HAL/API/UltraSound.h"


namespace HAL { 
	namespace API { 
		namespace UltraSound { 
			namespace Stub { 
	class UltraSound_JsonServer : public jsonrpc::AbstractServerInterface<UltraSound_JsonServer>
		{
			public:
				UltraSound_JsonServer(jsonrpc::ServiceHandlers & handlers, HAL::API::UltraSound::IUltraSound::Ptr interfaceImpl) :
					jsonrpc::AbstractServerInterface<UltraSound_JsonServer>("HAL.API.UltraSound.UltraSound", handlers), interfaceImpl(interfaceImpl) 
					{
						            this->bindAndAddMethod(new jsonrpc::Procedure("Reconnect", jsonrpc::PARAMS_BY_NAME, jsonrpc::JSON_NULL,  NULL), &UltraSound_JsonServer::ReconnectI);
            this->bindAndAddMethod(new jsonrpc::Procedure("GetStatus", jsonrpc::PARAMS_BY_NAME, jsonrpc::JSON_NULL,  NULL), &UltraSound_JsonServer::GetStatusI);

					}
					
					        inline virtual void ReconnectI(const ::Json::Value& request, ::Json::Value& response) 
        {
            this->Reconnect();
        }

        inline virtual void GetStatusI(const ::Json::Value& request, ::Json::Value& response) 
        {
        	TouchSensors tmpvar_frontSensors;
TouchSensors tmpvar_backSensors;
bool tmpvar_isValid;

        	this->GetStatus(tmpvar_frontSensors, tmpvar_backSensors, tmpvar_isValid);
        	response["frontSensors"] = jsonrpc::Convertor::cpp2Json<TouchSensors >(tmpvar_frontSensors);
response["backSensors"] = jsonrpc::Convertor::cpp2Json<TouchSensors >(tmpvar_backSensors);
response["isValid"] = jsonrpc::Convertor::cpp2Json<bool >(tmpvar_isValid);

        }


					        void Reconnect(){
        	 interfaceImpl->Reconnect();
        }

        void GetStatus(TouchSensors & frontSensors, TouchSensors & backSensors, bool & isValid){
        	 interfaceImpl->GetStatus(frontSensors, backSensors, isValid);
        }


			private:
				HAL::API::UltraSound::IUltraSound::Ptr interfaceImpl;
};
 } 
 } 
 } 
 } 



#endif //_ULTRASOUND_JSONSERVER_H_

