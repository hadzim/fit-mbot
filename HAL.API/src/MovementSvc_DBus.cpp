#ifndef _NO_DBUS 
/**
 * THIS FILE IS GENERATED BY genTool, DO NOT CHANGE IT!!!!!
 */
///includes
#include "HAL/API/MovementSvc_DBus.h"
#include "Client/Movement_DBus.h"
#include "Server/Movement_DBus.h"

#include <TBS/Services/DBus/DBusServicesImpl.h>



namespace HAL { 
	namespace API { 
		namespace Movement { 
			namespace DBus { 
	   Client::Client(TBS::Services::ICommChannelHolder::Ptr ch) : 
	       ch(ch), comChannelHolder(new TBS::Services::CommunicationChannelHolder(ch)) {
	   }
	   Client::Client() : 
		   ch(TBS::Services::DBusCommChannelProvider::getDefaultCommChannel()), comChannelHolder(new TBS::Services::CommunicationChannelHolder(ch)) {
	   }
	   Client::~Client(){ 
	   }
	   HAL::API::Movement::IMovement & Client::Movement(){
   if (!movement_) {      movement_ =  new TBS::Services::DBusClientImpl<HAL::API::Movement::Stub::Movement_DBusClient>(comChannelHolder->getConnection());
   }   return *movement_;
}

	   
	   
	   Server::Server(TBS::Services::ICommChannelHolder::Ptr ch) : 
	   	   ch(ch){
		   
	    } 
		Server::Server() : 
	   	   ch(TBS::Services::DBusCommChannelProvider::getDefaultCommChannel()){
		   
	    } 
	    Server::~Server(){ 
	    }
	    
	   TBS::Services::IServer::Ptr Server::createMovement(HAL::API::Movement::IMovement::Ptr impl){
   return new TBS::Services::DBusServerImpl<HAL::API::Movement::IMovement, HAL::API::Movement::Stub::Movement_DBusServer>(ch, impl);
}

 } 
 } 
 } 
 } 


#endif 

