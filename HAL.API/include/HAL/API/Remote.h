/**
 * THIS FILE IS GENERATED BY genTool, DO NOT CHANGE IT!!!!!
 */
#ifndef _REMOTE_H_
#define _REMOTE_H_

#include <Poco/SharedPtr.h>
#include <Poco/BasicEvent.h>
#include "TBS/Services/Types.h"
#include <string>
#include <vector>
#include <map>

namespace TBS{ namespace Services{ namespace Introspection{ class Class; struct Struct; } } } 




namespace HAL { 
	namespace Remote { 
	   /** [interface] IMovement:  */
       class GEN_SERVICE_API IMovement {
			public:
				typedef Poco::SharedPtr <IMovement> Ptr;
				
				virtual ~IMovement(){}
				
				static std::string name(){
					static std::string n = "HAL.Remote.Movement";
					return n;
				}
				static const ::TBS::Services::Introspection::Class & introspection();
				
 //methods 
				
		/** 
		  * [method] Move: 
		  * [in] double speedLeft: 
		  * [in] double speedRight: 
		  */ 
		        virtual void Move(const double & speedLeft, const double & speedRight) = 0;

		/** 
		  * [method] Stop: 
		  */ 
		        virtual void Stop() = 0;

				
 //signals 
				
				
			};
 } 
 } 



#endif //_REMOTE_H_

